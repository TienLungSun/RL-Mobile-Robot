1. Install Anaconda on your computer to run python code 
See "Install Anaconda.pdf" at: https://github.com/TienLungSun/AI-Lecture-notes
Make sure your User directory does not have Chinese.

2. Install ML Agent to Unity and Anaconda
See "Install Unity ML Agent.pdf" at  https://github.com/TienLungSun/RL-Mobile-Robot
2.1. Download Unity ML-Agent folder 
2.2. Import ML Agent package to your Unity project
      Open Package Manager Window ->  Select "Add package from disk" -> Select ML agent folder/com.unity.ml-agents/package.json
      You should see Version 1.6.0-preview. KEEP THIS VERSION, DO NOT UPDATE !
2.3. Install ML Agent to Anaconda
      cd to the directory where setup.py is located
      pip install .
      pip freeze to check ==> mlagents == 0.22.0,  torch == 1.6.0 or above 

3. Summary of ML Agent folder
      com.unity.ml-agents\package.json ==> import ML Agent package to Unity project
      ml-agents\setup.py ==> install ML Agent to Anaconda
      config\ppo\*.yaml ==> define the hyper-parameters for RL training
      ml-agents\mlagents\trainers\ppo\trainer.py ==> implement the PPO algorithm

4. Create a ML agent to control your car
      Empty object -> rename 'CarAgent'
      Place CarAgent as the child of the car
      Add "Decision Requester" component
      ML Agent will automatically add "Behavior Parameters" and "Agent script"

5. Behavior Parameters
      For this agent, we will use vector to reprent the stae s = (stage, facing angle, d1 to d18 from range sensor)
      stage 1~3 stage 1(1, 0, 0), stage2 (0, 1, 0), stage3 (0, 0, 1)
      A total of 3+1+18 = 22 values to represent state s
      2 continuous actions: move forward/backward and turn left/right

6. Create your own Agent script
      see "Car_Agent_s7.cs" at my https://github.com/TienLungSun/RL-Mobile-Robot
      using Unity.MLAgents;
      public class xxx : Agent
      {
         xxx class name must be the same as the cs file name
         public Transform...
         RaycastHit 
         public GameObject...
         ...

         Start() - run ONLY ONCE when we Play in Unity
         OnEpisodeBegin() - run every time we start a new training session
         DetermineStage() - determine the agent's stage (1, 2, 3) based on its relative position with the goal
         CollectObservations()
         {
           22 variables as the state s
           stage 1: (1, 0, 0, facing angle, d1, d2, ..., d18)
           stage 2: (0, 1, 0, 0,            d1, d2, ..., d18)
           stage 3: (0, 0, 1, 0,            d1, d2, ..., d18)
         }

         OnActionReceived(vectorAction)
         {
           1. Perform actions
           vectorAction[0] - move forward/backwar
           vectorAction[1] - rotate R/L

           2. Assign rewards for this action
           every step -0.005*stage
           reach goal: +100, finish training session
           hit wall or blocks: -0.5, DO NOT FINISH TRAINING

           Tigure Mother approach - only give POSITIVE reward when reach goal, no other positive reward
         }

          Heuristic()
          {
            Human player play to debug
            Up/Down arrow key to move F/B
            R/L arrow key to rotate L/R
          }
      }

7. Save your script 
   Assign public variables

8. Remove the "Agent" script 

9. Manually test
   behavior type -> heuristic
   play and use Up/Down and R/L arrow key to move your car

10. Train the agent 
      see "Train ML Agent.pdf" at my https://github.com/TienLungSun/RL-Mobile-Robot
      change behavior name
      create a configuration file *.yaml of the same name at \config\ppo (see MobileRobot.yaml)
      cd to the directory where *.yaml is located
      mlagents-learn MobilRobot.yaml --run-id=1 --force
      press Play
      (You might need to download MS VC redistributable)
